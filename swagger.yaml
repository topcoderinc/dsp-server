swagger: '2.0'

info:
  version: "0.0.1"
  title: Drone REST API

basePath: /api/v1
schemes:
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

consumes:
- application/json
produces:
- application/json

paths:
  /login:
    post:
      description: Authenticate the user with email and password
      produces:
        - application/json
      tags:
       - auth
      parameters:
        - in: body
          name: body
          description: request data
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
            required:
              - email
              - password
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/LoginRes"
        "400":
          description: Missing email or password | invalid email
          schema:
            $ref: "#/definitions/ErrorMsg"
        "401":
          description: Invalid  password
          schema:
            $ref: "#/definitions/ErrorMsg"
        "404":
          description: User is not registered
          schema:
            $ref: "#/definitions/ErrorMsg"
  /login/social:
    post:
      description: Authenticate the user via social network (if not registered, it should auto-register a consumer user)
      produces:
        - application/json
      tags:
       - auth
      parameters:
        - in: body
          name: body
          description: request data
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              name:
                type: string
            required:
              - email
              - name
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/LoginRes"
        "400":
          description: Missing type or accessToken | not supported type | invalid access token
          schema:
            $ref: "#/definitions/ErrorMsg"
  /register:
    post:
      description: register new user
      produces:
        - application/json
      tags:
       - auth
      parameters:
        - in: body
          name: body
          description: register information
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              phone:
                type: string
              role:
                type: string
                description: user role
                enum:
                  - provider
                  - consumer
                  - admin
              provider:
                type: object
                description: if `role` is provider, then this one is required
                properties:
                  name:
                    type: string
                  status:
                    type: string
                    enum:
                      - active
                      - inactive
                  location:
                    $ref: "#/definitions/Address"
            required:
              - email
              - password
              - firstName
              - lastName
              - phone
      responses:
        "201":
          description: successful operation
          schema:
            $ref: "#/definitions/LoginRes"
        "400":
          description: invalid request | email already registered
          schema:
            $ref: "#/definitions/ErrorMsg"
  /forgot-password:
    post:
      description: Send forgot password email
      produces:
        - application/json
      tags:
       - auth
      parameters:
        - in: body
          name: body
          description: request values
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
            required:
              - email
      responses:
        "204":
          description: successful operation
        "400":
          description: invalid email
          schema:
            $ref: "#/definitions/ErrorMsg"
        "404":
          description: user not registered
          schema:
            $ref: "#/definitions/ErrorMsg"

  /reset-password:
    post:
      description: Reset password with code received from the email
      tags:
       - auth
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: request values
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              code:
                type: string
              password:
                type: string
            required:
              - email
              - code
              - password
      responses:
        "404":
          description: user not found
        "204":
          description: successful operation
        "400":
          description: invalid password or code
          schema:
            $ref: "#/definitions/ErrorMsg"

  /packages:
    get:
      description: Search packages
      tags:
       - package
      parameters:
        -
          name: offset
          in: query
          description: the search offset
          required: false
          type: integer
        -
          name: limit
          in: query
          description: the search limit, if limit is -1, then all docs will be returned, i.e. no server-side pagination
          required: true
          type: integer
        -
          name: type
          in: query
          description: the type of packages to show `popular`, `promoted`
          required: false
          type: string
        -
          name: longitude
          in: query
          description: the longitude of the user, required if latitude or maxDistance is provided
          required: false
          type: number
        -
          name: latitude
          in: query
          description: the latitude of the user, required if longitude or maxDistance is provided
          required: false
          type: number
        -
          name: maxDistance
          in: query
          description: the max distance to search (in meters) from longitude, latitude. Required if longitude or latitude is provided.
          required: false
          type: number

      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              total:
                type: integer
              items:
                type: array
                items:
                  $ref: "#/definitions/Package"


  /providers:
    get:
      description: Search provders
      tags:
       - provider
      parameters:
        -
          name: offset
          in: query
          description: the search offset
          required: false
          type: integer
        -
          name: limit
          in: query
          description: the search limit
          required: true
          type: integer
        -
          name: sortBy
          in: query
          description: the sort field. Allowed `popularity`, `date`, `price`. Default order is ascending. Prefix with `-` for descending order e.g. `-price`.
          required: false
          type: string
        -
          name: longitude
          in: query
          description: the longitude of the user
          required: true
          type: number
        -
          name: latitude
          in: query
          description: the latitude of the user
          required: true
          type: number
        -
          name: minPrice
          in: query
          description: the min price of package
          required: false
          type: number
        -
          name: maxPrice
          in: query
          description: the max price of package
          required: false
          type: number
        -
          name: maxDistance
          in: query
          description: the max distance to search (in meters) from longitude, latitude
          required: true
          type: number
        -
          name: categoryId
          in: query
          description: the category id to filter
          required: false
          type: string
        -
          name: keyword
          in: query
          description: the keyword to search (matches many fields)
          required: false
          type: string
        -
          name: simpleKeyword
          in: query
          description: the simple keyword to search
          required: false
          type: string

      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              total:
                type: integer
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    location:
                      type: array
                      items:
                        $ref: "#/definitions/Address"
                    name:
                      type: string
                    imageUrl:
                      type: string
                    thumbnailUrl:
                      type: string
                    status:
                      type: string
                    minPrice:
                      type: number
                    maxPrice:
                      type: number
                    rating:
                      $ref: "#/definitions/Rating"
                    packages:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"

  /providers/{id}:
    get:
      description: Get provder details
      parameters:
        -
          name: id
          in: path
          description: the provider id
          required: true
          type: string
      tags:
       - provider

      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              id:
                type: string
              location:
                type: array
                items:
                  $ref: "#/definitions/Address"
              name:
                type: string
              imageUrl:
                type: string
              thumbnailUrl:
                type: string
              status:
                type: string
              rating:
                $ref: "#/definitions/Rating"
        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: provider not found
          schema:
            $ref: "#/definitions/ErrorMsg"

  /providers/{id}/missions:
    get:
      description: Get completed missions from provider
      parameters:
        -
          name: id
          in: path
          description: the provider id
          required: true
          type: string
        -
          name: offset
          in: query
          description: the search offset
          required: false
          type: integer
        -
          name: limit
          in: query
          description: the search limit
          required: true
          type: integer
      tags:
       - mission

      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              total:
                type: integer
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    packageName:
                      type: string
                    completedAt:
                      type: string
        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: provider not found
          schema:
            $ref: "#/definitions/ErrorMsg"

  /providers/{id}/reviews:
    get:
      description: Get reviews for provider
      parameters:
        -
          name: id
          in: path
          description: the provider id
          required: true
          type: string
        -
          name: offset
          in: query
          description: the search offset
          required: false
          type: integer
        -
          name: limit
          in: query
          description: the search limit
          required: true
          type: integer
      tags:
       - review

      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              total:
                type: integer
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    rating:
                      type: number
                    createdAt:
                      type: string
                    publicFeedback:
                      type: string
                    user:
                      type: object
                      properties:
                        id:
                          type: string
                        lastName:
                          type: string
                        firstName:
                          type: string
                        gravatarUrl:
                          type: string
        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: provider not found
          schema:
            $ref: "#/definitions/ErrorMsg"

  /providers/{id}/packages:
    get:
      description: Get all packages from provider
      parameters:
        -
          name: id
          in: path
          description: the provider id
          required: true
          type: string
      tags:
       - package

      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                imageUrl:
                  type: string
                thumbnailUrl:
                  type: string
                catalogName:
                  type: string
                price:
                  type: number
                bestseller:
                  type: boolean
                promoted:
                  type: boolean
                discount:
                  type: boolean
        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: provider not found
          schema:
            $ref: "#/definitions/ErrorMsg"

  /packages/{id}:
    get:
      description: Get package details
      parameters:
        -
          name: id
          in: path
          description: the package id
          required: true
          type: string
      tags:
       - package

      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
                id:
                  type: string
                name:
                  type: string
                description:
                  type: string
                longDescription:
                  type: string
                shortDescription:
                  type: string
                imageUrl:
                  type: string
                thumbnailUrl:
                  type: string
                catalogName:
                  type: string
                price:
                  type: number
                bestseller:
                  type: boolean
                promoted:
                  type: boolean
                discount:
                  type: boolean
                isSaved:
                  type: boolean
                provider:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string

        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: package not found
          schema:
            $ref: "#/definitions/ErrorMsg"

  /packages/{id}/related:
    get:
      description: Get related packages (packages user might like)
      parameters:
        -
          name: id
          in: path
          description: the package id
          required: true
          type: string
      tags:
       - package

      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                imageUrl:
                  type: string
                thumbnailUrl:
                  type: string
                price:
                  type: number
                bestseller:
                  type: boolean
                promoted:
                  type: boolean
                discount:
                  type: boolean
                provider:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string

        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: package not found
          schema:
            $ref: "#/definitions/ErrorMsg"

  /saved-packages:
    get:
      description: Get all saved packages for current user
      security:
        - Bearer: []
      tags:
       - package

      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                imageUrl:
                  type: string
                thumbnailUrl:
                  type: string
                price:
                  type: number
                bestseller:
                  type: boolean
                promoted:
                  type: boolean
                discount:
                  type: boolean
                provider:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
        401:
          description: missing bearer token
          schema:
            $ref: "#/definitions/ErrorMsg"

  /saved-packages/{id}:
    post:
      description: Save package
      security:
        - Bearer: []
      tags:
       - package
      parameters:
        -
          name: id
          in: path
          description: the package id
          required: true
          type: string

      responses:
        204:
          description: successful operation
        400:
          description: invalid parameters | already saved
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: package not found
          schema:
            $ref: "#/definitions/ErrorMsg"
    delete:
      description: Delete saved package
      security:
        - Bearer: []
      parameters:
        -
          name: id
          in: path
          description: the package id
          required: true
          type: string

      responses:
        204:
          description: successful operation
        400:
          description: invalid parameters | package is not saved
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: missing bearer token
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: package not found
          schema:
            $ref: "#/definitions/ErrorMsg"

  /missions:
    get:
      description: Search missions
      tags:
       - mission
      parameters:
        -
          name: offset
          in: query
          description: the search offset
          required: false
          type: integer
        -
          name: limit
          in: query
          description: the search limit
          required: true
          type: integer

      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              total:
                type: integer
              items:
                type: array
                items:
                  $ref: "#/definitions/MissionPublic"
        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
    post:
      description: Create mission
      tags:
       - mission
      parameters:
        -
          name: body
          in: body
          schema:
            $ref: "#/definitions/MissionReq"
          required: true

      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              total:
                type: integer
              items:
                type: array
                items:
                  $ref: "#/definitions/MissionPublic"
        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"

  /missions/{id}:
    get:
      description: Get missions details
      security:
        - Bearer: []
      tags:
       - mission
      parameters:
        -
          name: id
          in: path
          description: the mission id
          required: true
          type: string

      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              id:
                type: string
              status:
                type: string
              pilot:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
              startingPoint:
                $ref: "#/definitions/Address"
              destinationPoint:
                $ref: "#/definitions/Address"
              startedAt:
                type: string
              completedAt:
                type: string
              telemetry:
                type: object
                properties:
                  lat:
                    type: number
                  long:
                    type: number
                  speed:
                    type: number
                  distance:
                    type: number
              eta:
                type: number
              frontCameraUrl:
                type: string
              backCameraUrl:
                type: string
              gallery:
                type: array
                items:
                  type: object
                  properties:
                    thumbnailUrl:
                      type: string
                    videoUrl:
                      type: string
                    imageUrl:
                      type: string
        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: missing bearer token
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: no permissions to access this mission
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: mission not found
          schema:
            $ref: "#/definitions/ErrorMsg"

  /categories:
    get:
      description: Get all categories
      tags:
       - category

      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Category"

  /notifications:
    get:
      description: Get user notifications
      security:
        - Bearer: []
      tags:
       - notification
      parameters:
        -
          name: offset
          in: query
          description: the search offset
          required: false
          type: integer
        -
          name: limit
          in: query
          description: the search limit
          required: true
          type: integer

      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Notification"
        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: missing bearer token
          schema:
            $ref: "#/definitions/ErrorMsg"

  /notifications/{id}/read:
    post:
      description: Mark notification as read
      security:
        - Bearer: []
      tags:
       - notification
      parameters:
        -
          name: id
          in: path
          description: the notification id
          required: true
          type: string

      responses:
        204:
          description: successful operation
        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: missing bearer token
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: notification belongs to other user
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: notification not found
          schema:
            $ref: "#/definitions/ErrorMsg"


  /packages/{id}/request:
    post:
      description: Request a pacakge
      security:
        - Bearer: []
      tags:
       - request
       - package
      parameters:
        -
          name: id
          in: path
          description: the package id
          required: true
          type: string
        - in: body
          name: body
          description: request data
          required: true
          schema:
            type: object
            properties:
              recipientName:
                type: string
              phoneNumber:
                type: string
              destinationPoint:
                $ref: "#/definitions/Address"
              launchDate:
                type: string
              whatToBeDelivered:
                type: string

      responses:
        201:
          description: successful operation
        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: missing bearer token
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: package not found
          schema:
            $ref: "#/definitions/ErrorMsg"
  /drones:
    get:
      description: Get all drones
      tags:
        - drone
      parameters:
        -
          name: offset
          in: query
          description: the search offset
          required: false
          type: integer
        -
          name: limit
          in: query
          description: the search limit
          required: true
          type: integer
        -
          in: query
          name: statuses
          description: the drone statuses filter. Allowed `in-motion`, `idle-ready`, `idle-busy` (refer to `Const.DroneStatus` in js model)
          type: array
          items:
            type: string
        -
          in: query
          name: sortBy
          description: the sort column. Allowed values 'serialNumber', 'name', 'type', 'mileage', '-serialNumber', '-name', '-type', '-mileage'
          type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Drone"
  /drones/{id}:
    put:
      description: Update a drone's location
      tags:
        - drone
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: body
          name: body
          description: the drone location data
          schema:
            $ref: "#/definitions/DroneUpdateReq"
          required: true
        - in: query
          name: returnNFZ
          description: Returns the list of the No Fly Zones that the drone has violated if it is true.
          type: boolean
          required: false
        - in: query
          name: nfzFields
          description: Specify fields of No Fly Zones to be projected. Fields are comma split.
          type: string
          required: false
        - in: query
          name: nfzLimit
          description: Limit number of No Fly Zones to be returned, it is 20 by default.
          type: integer
          required: false
        - in: query
          name: nearDronesMaxDist
          description: The maximum distance to search nearest drones, the unit is meter. Returns the list of nearest drones if it is provided and > 0
          type: number
          required: false
        - in: query
          name: nearDroneFields
          description: Specify fields of Drones to be projected. Fields are comma split.
          type: string
          required: false
        - in: query
          name: nearDronesLimit
          description: Limit number of nearest drones to be returned, it is 1 by default.
          type: integer
          required: false
      responses:
        200:
          description: successful operation
          schema:
            $ref: "#/definitions/DroneUpdateRes"
        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: drone not found
          schema:
            $ref: "#/definitions/ErrorMsg"

  /requests:
    get:
      description: Get package requests of current user
      security:
        - Bearer: []
      tags:
       - request
      parameters:
        -
          name: offset
          in: query
          description: the search offset
          required: false
          type: integer
        -
          name: limit
          in: query
          description: the search limit, if its value is less than 1, there won't be limitation on returned records, i.e. no pagination.
          required: true
          type: integer
        -
          name: status
          in: query
          description: the mission status
          required: false
          type: integer

      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              total:
                type: integer
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
                    status:
                      type: string
                    launchDate:
                      type: string
                    mission:
                      type: object
                      properties:
                        id:
                          type: string
                    provider:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                    package:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: missing bearer token
          schema:
            $ref: "#/definitions/ErrorMsg"

  /requests/{id}:
    get:
      description: Get specified package request of current user
      security:
        - Bearer: []
      tags:
       - request
      parameters:
        - name: id
          in: path
          description: the request id
          required: true
          type: string

      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              id:
                type: string
              contactInfo:
                type: object
              status:
                type: string
              launchDate:
                type: string
              mission:
                type: object
              payout:
                type: number
              destinationPoint:
                $ref: "#/definitions/Address"
              startingPoint:
                $ref: "#/definitions/Address"
              title:
                type: string
              weight:
                type: number
              whatToBeDelivered:
                type: string
              zones:
                type: array
                items:
                  type: object
        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: missing bearer token
          schema:
            $ref: "#/definitions/ErrorMsg"

  /mission/{id}/review:
    post:
      description: Submit review for a mission
      security:
        - Bearer: []
      tags:
       - review
      parameters:
        -
          name: id
          in: path
          description: the mission id
          required: true
          type: string
        - in: body
          name: body
          description: request data
          required: true
          schema:
            type: object
            properties:
              publicFeedback:
                type: string
              privateFeedback:
                type: string
              rating:
                type: number
            required:
              - rating

      responses:
        201:
          description: successful operation
        400:
          description: invalid parameters | mission not completed | duplicate review
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: missing bearer token
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: no permission to access this missing
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: mission not found
          schema:
            $ref: "#/definitions/ErrorMsg"

  /provider/dashboard:
    get:
      description: Get the dashboard information for thee current logged in user. Provider role only.
      tags:
        - dashboard
      security:
        - Bearer: []
      responses:
        200:
          description: Successful operation
          schema:
            type: object
            properties:
              pendingRequestCount:
                type: number
              scheduledMissionCount:
                type: number
              inProgressMissionCount:
                type: number
              completedMissionCount:
                type: number
              droneCount:
                type: number
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /provider/requests:
    get:
      description: Search package requests of the current logged in user. Sort by request's created date DESC. Provider role only.
      tags:
        - request
      security:
        - Bearer: []
      parameters:
        - in: query
          name: limit
          description: the search limit
          type: integer
          required: true
        - in: query
          name: offset
          description: the search offset
          type: integer
        - in: query
          name: statuses
          description: the request statuses filter. Refer to `Const.RequestStatus` in js model
          type: array
          items:
            type: string
        - in: query
          name: launchDate
          description: the launch date filter
          type: string
          format: date
      responses:
        200:
          description: Successful operation
          schema:
            type: object
            properties:
              total:
                type: integer
              items:
                type: array
                items:
                  # Package Request
                  type: object
                  properties:
                    id:
                      type: string
                    status:
                      type: string
                    serviceName:
                      type: string
                    launchDate:
                      type: string
                    startingPoint:
                      $ref: "#/definitions/Address"
                    destinatitonPoint:
                      $ref: "#/definitions/Address"
                    distance:
                      type: number
                    payout:
                      type: number
                    packageName:
                      type: string
                    whatToBeDelivered:
                      type: string
                    weight:
                      type: number
                    customer:
                      type: object
                      properties:
                        firstName:
                          type: string
                        lastName:
                          type: string
                        address:
                          $ref: "#/definitions/Address"
                        phone:
                          type: string
                        email:
                          type: string
                        photoUrl:
                          type: string
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /provider/requests/{id}/accept:
    post:
      description: Accept a new/pending request of the current logged in user, then generate a notification to customer. Provider role only.
      tags:
        - request
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          description: the request id
          type: string
          required: true
      responses:
        200:
          description: Successful operation
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. The provider does not have this request
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /provider/requests/{id}/reject:
    post:
      description: Reject a new/pending request of the current logged in user, then generate a notification to customer. Provider role only.
      tags:
        - request
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          description: the request id
          type: string
          required: true
      responses:
        200:
          description: Successful operation
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. The provider does not have this request
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /provider/requests/{id}/cancel:
    post:
      description: Cancel a scheduled / in-progress request of the current logged in user, then generate a notification to customer. Provider role only.
      tags:
        - request
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          description: the request id
          type: string
          required: true
      responses:
        200:
          description: Successful operation
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. The provider does not have this request
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /provider/requests/{id}/assign-drone:
    post:
      description: Assign drone to a pending request of the current logged in user. Provider role only.
      tags:
        - request
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          description: the request id
          type: string
          required: true
        - in: body
          name: body
          description: the request data
          schema:
            $ref: "#/definitions/AssignDroneReq"
          required: true
      responses:
        200:
          description: Successful operation
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. The provider does not have this request
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /provider/requests/{id}:
    get:
      description: Get details of a request of the current logged in user. Provider role only.
      tags:
        - request
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          description: the request id
          type: string
          required: true
      responses:
        200:
          description: Successful operation
          schema:
            # Package Request
            type: object
            properties:
              id:
                type: string
              serviceName:
                type: string
              launchDate:
                type: string
              startingPoint:
                $ref: "#/definitions/Address"
              destinatitonPoint:
                $ref: "#/definitions/Address"
              distance:
                type: number
              payout:
                type: number
              packageName:
                type: string
              whatToBeDelivered:
                type: string
              weight:
                type: number
              customer:
                type: object
                properties:
                  firstName:
                    type: string
                  lastName:
                    type: string
                  address:
                    $ref: "#/definitions/Address"
                  phone:
                    type: string
                  email:
                    type: string
                  photoUrl:
                    type: string
              mission:
                type: object
                properties:
                  id:
                    type: string
                  status:
                    type: string
                  pilot:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                  startingPoint:
                    $ref: "#/definitions/Address"
                  destinationPoint:
                    $ref: "#/definitions/Address"
                  startedAt:
                    type: string
                  completedAt:
                    type: string
                  telemetry:
                    type: object
                    properties:
                      lat:
                        type: number
                      long:
                        type: number
                      speed:
                        type: number
                      distance:
                        type: number
                  eta:
                    type: number
                  frontCameraUrl:
                    type: string
                  backCameraUrl:
                    type: string
                  gallery:
                    type: array
                    items:
                      type: object
                      properties:
                        thumbnailUrl:
                          type: string
                        videoUrl:
                          type: string
                        imageUrl:
                          type: string
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. The provider does not have this request
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /provider/requests/{id}/complete:
    post:
      description: Complete a request of the current logged in user, then generate a notification to customer. Provider role only.
      tags:
        - request
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          description: the request id
          type: string
          required: true
      responses:
        200:
          description: Successful operation
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. The provider does not have this request
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /provider/requests/{id}/mission-estimation:
    post:
      description: Update mission estimation of an in-progress request of the current logged in user. Provider role only.
      tags:
        - request
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          description: the request id
          type: string
          required: true
        - in: body
          name: body
          description: the request data
          schema:
            $ref: "#/definitions/MissionEstimationReq"
          required: true
      responses:
        200:
          description: Successful operation
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. The provider does not have this request
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /provider/requests/{id}/mission-telemetry:
    post:
      description: Update mission telemetry of a completed request of the current logged in user. Provider role only.
      tags:
        - request
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          description: the request id
          type: string
          required: true
        - in: body
          name: body
          description: the request data
          schema:
            $ref: "#/definitions/MissionTelemetryReq"
          required: true
      responses:
        200:
          description: Successful operation
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. The provider does not have this request
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /provider/drones/current-locations:
    get:
      description: Get status and location of all drones of the current logged in user. Provider role only.
      tags:
        - drone
      security:
        - Bearer: []
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: drone id
                serialNumber:
                  type: string
                  description: drone serialNumber
                status:
                  type: string
                  description: drone status
                currentLocation:
                  type: array
                  items:
                    type: number
                  description: "[long, lat] coordinate"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /provider/drones:
    get:
      description: Search drones that the current logged in user provides. Provider role only.
      tags:
        - drone
      security:
        - Bearer: []
      parameters:
        - in: query
          name: limit
          description: the search limit
          type: integer
          required: true
        - in: query
          name: offset
          description: the search offset
          type: integer
        - in: query
          name: statuses
          description: the drone statuses filter. Allowed `in-motion`, `idle-ready`, `idle-busy` (refer to `Const.DroneStatus` in js model)
          type: array
          items:
            type: string
        - in: query
          name: sortBy
          description: the sort field. Allowed `serialNumber`, `name`, `type`, `mileage`. Default order is ascending. Prefix with `-` for descending order e.g. `-name`
          type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
            properties:
              total:
                type: integer
              items:
                type: array
                items:
                  # Drone
                  type: object
                  properties:
                    id:
                      type: string
                    imageUrl:
                      type: string
                    thumbnailUrl:
                      type: string
                    serialNumber:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    type:
                      type: string
                    mileage:
                      type: number
                    minSpeed:
                      type: number
                    maxSpeed:
                      type: number
                    maxFlightTime:
                      type: number
                    maxCargoWeight:
                      type: number
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

    post:
      description: Create a drone for the current logged in user. Provider role only.
      tags:
        - drone
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          description: the drone request data
          schema:
            $ref: "#/definitions/Drone"
          required: true
      responses:
        201:
          description: Successful operation
          schema:
            $ref: "#/definitions/Drone"
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /provider/drones/{id}:
    get:
      description: Get detail of a drone
      tags:
        - drone
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: "#/definitions/Drone"
        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: drone not found
          schema:
            $ref: "#/definitions/ErrorMsg"
    put:
      description: Update a drone for the current logged in user. Provider role only.
      tags:
        - drone
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: body
          name: body
          description: the drone request data
          schema:
            $ref: "#/definitions/Drone"
          required: true
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/Drone"
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. Current logged in provider does not have this drone
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

    delete:
      description: Delete a drone for the current logged in user. Provider role only.
      tags:
        - drone
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        204:
          description: Successful operation
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. Current logged in provider does not have this drone
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /provider/drones/{droneId}/missions/monthly-count:
    get:
      description: Get the number of drone missions for each day in a specific month for the current logged in user. Provider role only.
      tags:
        - drone
      security:
        - Bearer: []
      parameters:
        - in: path
          name: droneId
          type: string
          required: true
        - in: query
          name: month
          type: string
          description: the month to count, e.g. Nov-2016
          required: true
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              type: object
              properties:
                date:
                  type: string
                count:
                  type: number
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. Current logged in provider does not have this drone
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /provider/drones/{droneId}/missions:
    get:
      description: Get drone missions for the current logged in user. Always sort by mission start time DESC. Provider role only.
      tags:
        - drone
      security:
        - Bearer: []
      parameters:
        - in: path
          name: droneId
          type: string
          required: true
        - in: query
          name: date
          type: string
          description: "the mission start date filter, e.g. 15-Nov-2016"
        - in: query
          name: status
          type: string
          description: the mission status filter. Allowed `waiting`, `in-progress`, `completed`
        - in: query
          name: limit
          type: integer
          description: the search limit
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                startedAt:
                  type: string
                serviceName:
                  type: string
                startingPoint:
                  $ref: "#/definitions/Address"
                destinationPoint:
                  $ref: "#/definitions/Address"
                rating:
                  type: integer
                whatToBeDelivered:
                  type: string
                weight:
                  type: number
                serviceType:
                  type: string
                missionName:
                  type: string
                completedAt:
                  type: string
                scheduledAt:
                  type: string
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. Current logged in provider does not have this drone
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /provider/services:
    get:
      description: Search services that the current logged in user provides. Provider role only.
      tags:
        - service
      security:
        - Bearer: []
      parameters:
        - in: query
          name: limit
          description: the search limit
          type: integer
          required: true
        - in: query
          name: offset
          description: the search offset
          type: integer
        - in: query
          name: sortBy
          description: the sort field. Allowed `name`, `pricing`. Default order is ascending. Prefix with `-` for descending order e.g. `-name`.
          required: false
          type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
            properties:
              total:
                type: integer
              items:
                type: array
                items:
                  # Service
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    pricing:
                      type: string
                    description:
                      type: string
                    category:
                      type: string
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

    post:
      description: Create a new service with its packages for the current logged in user. Provider role only.
      tags:
        - service
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          description: the service and packages request data
          schema:
            $ref: "#/definitions/Service"
          required: true
      responses:
        201:
          description: Successful operation
          schema:
            $ref: "#/definitions/Service"
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /provider/services/{id}:
    delete:
      description: Delete the service and its packages for the current logged in user. Provider role only.
      tags:
        - service
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        204:
          description: Successful operation
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. Current logged in provider does not offer this service
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

    get:
      description: Get the service and its packages for the current logged in user. Provider role only.
      tags:
        - service
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/Service"
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. Current logged in provider does not offer this service
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

    put:
      description: Update the service and create/update/delete its packages for the current logged in user. Provider role only.
      tags:
        - service
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: body
          name: body
          description: the service and its packages request data
          schema:
            $ref: "#/definitions/Service"
          required: true
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/Service"
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-provider is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. Current logged in provider does not offer this service
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /dronePosition/{id}:
    get:
      description: Get a list of positions of a drone
      tags:
        - drone
      parameters:
        - in: path
          description: id of drone
          name: id
          type: string
          required: true
        -
          name: offset
          in: query
          description: the search offset
          required: false
          type: integer
        -
          name: limit
          in: query
          description: the search limit
          required: true
          type: integer
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              total:
                type: integer
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    droneId:
                      type: string
                    lat:
                      type: number
                    lng:
                      type: number
                    createdAt:
                      type: string
                      format: date
        400:
          description: invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: drone not found
          schema:
            $ref: "#/definitions/ErrorMsg"
  /nfz/search:
    post:
      description: search no fly zones
      produces:
        - application/json
      tags:
       - no fly zone
      parameters:
        - in: body
          name: body
          description: search criteria
          required: true
          schema:
            type: object
            properties:
              mission:
                type: string
              isActive:
                type: boolean
              isPermanent:
                type: boolean
              geometry:
                $ref: "#/definitions/GeoJSON"
              matchTime:
                type: boolean
              offset:
                type: number
              limit:
                type: number
        - in: query
          name: fields
          description: the projection field. Allowed `circle`, `description`, `startTime`, `endTime`, `isActive`, `isPermanent`, `mission`, `location`. If it is not provided, then returns all fields. The field `id` is always returned.
          required: false
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: object
            properties:
              total:
                type: integer
              items:
                type: array
                items:
                  $ref: "#/definitions/NoFlyZone"
        "400":
          description: invalid search criteria
          schema:
            $ref: "#/definitions/ErrorMsg"
  /nfz/:
    post:
      description: create a fly zone
      produces:
        - application/json
      tags:
       - no fly zone
      parameters:
        - in: body
          name: body
          description: values
          required: true
          schema:
            $ref: "#/definitions/NoFlyZone"
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/NoFlyZone"
        "400":
          description: invalid input parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
  /nfz/{id}:
    post:
      description: update a fly zone
      produces:
        - application/json
      tags:
       - no fly zone
      parameters:
        - in: path
          description: id of no fly zone
          name: id
          type: string
          required: true
        - in: body
          name: body
          description: values
          required: true
          schema:
            $ref: "#/definitions/NoFlyZone"
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/NoFlyZone"
        "400":
          description: invalid input parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        "404":
          description: fly zone not found
          schema:
            $ref: "#/definitions/ErrorMsg"
    delete:
      description: delete a fly zone
      produces:
        - application/json
      tags:
       - no fly zone
      parameters:
        - in: path
          description: id of no fly zone
          name: id
          type: string
          required: true
      responses:
        "204":
          description: successful operation
        "400":
          description: invalid id
          schema:
            $ref: "#/definitions/ErrorMsg"
        "404":
          description: fly zone not found
          schema:
            $ref: "#/definitions/ErrorMsg"

  /pilot/missions:
    get:
      description: Get list of missions for the current logged in pilot. Pilot role only.
      tags:
        - pilot
        - mission
      security:
        - Bearer: []
      parameters:
        -
          name: offset
          in: query
          description: the search offset
          required: false
          type: integer
        -
          name: limit
          in: query
          description: the search limit
          required: false
          type: integer
        -
          name: sortBy
          in: query
          description: the sort field. Allowed `missionName`, `status`. Default order is ascending. Prefix with `-` for descending order e.g. `-missionName`.
          required: false
          type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
            properties:
              total:
                type: integer
              items:
                type: array
                items:
                  # Mission list
                  type: object
                  properties:
                    id:
                      type: string
                    missionName:
                      type: string
                    status:
                      type: string
                    droneOnline:
                      type: boolean
                      description: true is drone is online, otherwise false
                    pilotChecklist:
                      type: object
                      properties:
                        user:
                          type: string
                          description: the pilot who filled the checklist
                        createdAt:
                          type: string
                          description: the ISO 8601 date string when this checklist is created
                        updatedAt:
                          type: string
                          description: the ISO 8601 date string when this checklist was last updated
                        answers:
                          type: array
                          items:
                            type: object
                            properties:
                              answer:
                                type: string
                                description: the answer given for this question
                              question:
                                type: string
                                description: the id of the referenced question
                    drone:
                      type: object
                      required:
                        - id
                        - name
                      properties:
                        id:
                          type: string
                          description: the assigned drone id
                        name:
                          type: string
                          description: the assigned drone name
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-pilot is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

  /pilot/checklist/{id}:
    get:
      description: Get the checklist for specified mission. Pilot role only.
      tags:
        - checklist
        - pilot
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        200:
          description: Successful operation
          schema:
            type: object
            properties:
              questions:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    text:
                      type: string
                  required:
                    - id
                    - text
              missionStatus:
                type: string
              missionName:
                type: string
              pilotChecklist:
                $ref: "#/definitions/PilotChecklist"
            required:
              - questions
              - missionStatus
              - missionName
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-pilot is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. Current logged in pilot is not assigned to this mission
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"
    put:
      description: Update the checklist for specified mission. Pilot role only.
      tags:
        - checklist
        - pilot
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: body
          name: body
          description: checklist answers and load flag if we want to load mission
          schema:
            type: object
            properties:
              answers:
                type: array
                items:
                  $ref: "#/definitions/PilotChecklistAnswer"
              load:
                type: boolean
          required: true
      responses:
        200:
          description: Successful operation
          schema:
            type: object
            properties:
              missionStatus:
                type: string
              pilotChecklist:
                $ref: "#/definitions/PilotChecklist"
            required:
              - missionStatus
              - pilotChecklist
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-pilot is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. Current logged in pilot is not assigned to this mission
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"
  /missions/{id}/drone-status:
    get:
      description: Get the drone status for the specified mission
      tags:
        - mission
        - drone
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: string
          description: the mission id
          required: true
      responses:
        200:
          description: Successful operation
          schema:
            type: object
            properties:
              currentPosition:
                type: object
                required:
                  - alt
                  - hdg
                  - lat
                  - lon
                  - time_boot_ms
                  - relative_alt
                  - vx
                  - vy
                  - vz
                properties:
                  alt:
                    type: number
                    description: the drone current altitude
                  hdg:
                    type: number
                  lat:
                    type: number
                    description: the drone current latitude coordinate
                  lon:
                    type: number
                    description: the drone current longitude coordinate
                  time_boot_ms:
                    type: number
                    description: the drone time boot in milliseconds
                  relative_alt:
                    type: number
                    description: the drone relative altitude
                  vx:
                    type: number
                  vy:
                    type: number
                  vz:
                    type: number
              waypoints:
                type: array
                items:
                  type: object
                  required:
                    - param1
                    - param2
                    - param3
                    - param4
                    - seq
                    - target_component
                    - target_system
                    - x
                    - y
                    - z
                    - frame
                    - current
                    - command
                    - autocontinue
                  properties:
                    param1:
                      type: number
                    param2:
                      type: number
                    param3:
                      type: number
                    param4:
                      type: number
                    seq:
                      type: number
                    target_component:
                      type: number
                    target_system:
                      type: number
                    x:
                      type: number
                    y:
                      type: number
                    z:
                      type: number
                    frame:
                      type: number
                    current:
                      type: number
                    command:
                      type: number
                    autocontinue:
                      type: number
            required:
              - currentPosition
              - waypoints
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-pilot is not allowed to access or the current logged in user is not pilot for this mission
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. Mission not found with specified id
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"
  /missions/{id}/load:
    post:
      description: Load the mission to the drone
      tags:
        - mission
        - drone
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: string
          description: the mission id
          required: true
      responses:
        200:
          description: Successful operation
        400:
          description: Invalid parameters
          schema:
            $ref: "#/definitions/ErrorMsg"
        401:
          description: Anonymous is not allowed to access
          schema:
            $ref: "#/definitions/ErrorMsg"
        403:
          description: Non-pilot is not allowed to access or the current logged in user is not pilot for this mission
          schema:
            $ref: "#/definitions/ErrorMsg"
        404:
          description: Not found. Mission not found with specified id
          schema:
            $ref: "#/definitions/ErrorMsg"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorMsg"

definitions:
  MissionReq:
    type: object
    properties:
      missionName:
        type: string
      plannedHomePosition:
        type: string
      missionItems:
        type: string
      status:
        type: string
      drone:
        type: string
      provider:
        type: string
      package:
        type: string
      pilot:
        type: string
      startingPoint:
        type: string
      startedAt:
        type: string
      completedAt:
        type: string
      scheduledAt:
        type: string
      telemetry:
        type: string
      eta:
        type: string
      frontCameraUrl:
        type: string
      backCameraUrl:
        type: string
      gallery:
        type: string
      rating:
        type: string
      specialRequirements:
        type: string
      notes:
        type: string
      weight:
        type: string
      whatToBeDelivered:
        type: string
      estimation:
        type: string
      result:
        type: string
    required:
      - status
  MissionEstimationReq:
    type: object
    properties:
      launchTime:
        type: string
        format: date
      speed:
        type: number
      distance:
        type: number
      time:
        type: number
    required:
      - launchTime
      - speed
      - distance
      - time

  MissionTelemetryReq:
    type: object
    properties:
      startedAt:
        type: string
        format: date
      completedAt:
        type: string
        format: date
      distance:
        type: number
      averageSpeed:
        type: number
      maxSpeed:
        type: number
      minSpeed:
        type: number
      gallery:
        type: array
        items:
          type: object
          properties:
            thumbnailUrl:
              type: string
            videoUrl:
              type: string
            imageUrl:
              type: string
    required:
      - startedAt
      - completedAt
      - distance
      - averageSpeed
      - minSpeed
      - maxSpeed

  AssignDroneReq:
    type: object
    properties:
      droneId:
        type: string
      scheduledLaunchDate:
        type: string
      specialRequirements:
        type: array
        items:
          type: string
      notes:
        type: string
    required:
      - droneId
      - scheduledLaunchDate

  Service:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      pricing:
        type: string
      description:
        type: string
      category:
        type: string
      packages:
        type: array
        description: Service must have at least 1 package
        items:
          $ref: "#/definitions/Package"
    required:
      - name
      - pricing
      - description

  Package:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      deliverySpeed:
        type: number
      costPerMile:
        type: number
      insuranceClaim:
        type: number
      maxWeight:
        type: number
      price:
        type: number
      discountPrice:
        type: number
    required:
      - name
      - description
      - price

  Drone:
    type: object
    properties:
      id:
        type: string
      serialNumber:
        type: string
      name:
        type: string
      description:
        type: string
      type:
        type: string
      minSpeed:
        type: number
      maxSpeed:
        type: number
      maxFlightTime:
        type: number
      maxCargoWeight:
        type: number
      maxAltitude:
        type: number
      cameraResolution:
        type: number
      videoResolution:
        type: number
      hasWiFi:
        type: boolean
      hasBluetooth:
        type: boolean
      engineType:
        type: string
      numberOfRotors:
        type: integer
      hasAccelerometer:
        type: boolean
      hasGyroscope:
        type: boolean
      hasRadar:
        type: boolean
      hasGPS:
        type: boolean
      hasObstacleSensors:
        type: boolean
      hasUltraSonicAltimeter:
        type: boolean
      imageUrl:
        type: string
      mileage:
        type: number
      status:
        type: string
        enum:
          - in-motion
          - idle-ready
          - idle-busy
      specificationContent:
        type: string
      specificationImageUrl:
        type: string
      specificationPDFUrl:
        type: string
    required:
      - serialNumber
      - name
      - type

  DroneUpdateRes:
    type: object
    allOf:
      - $ref: "#/definitions/Drone"
    properties:
      noFlyZones:
        type: array
        items:
          $ref: "#/definitions/NoFlyZone"
      nearestDrones:
        type: array
        items:
          $ref: "#/definitions/Drone"
  LoginRes:
    type: object
    properties:
      accessToken:
        type: string
      user:
        $ref: "#/definitions/User"
  Category:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
  Notification:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
      user:
        type: string
      values:
        type: object
      createdAt:
        type: string
        format: date
      read:
        type: boolean
      readAt:
        type: string
        format: date
  MissionPublic:
    type: object
    properties:
      id:
        type: string
      package:
        $ref: "#/definitions/Package"
  Rating:
    type: object
    properties:
      count:
        type: number
      sum:
        type: number
      avg:
        type: number
  User:
    type: object
    properties:
      id:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      phone:
        type: string
      role:
        type: string

  Address:
    type: object
    properties:
      coordinates:
        type: array
        items:
          type: number
      line1:
        type: string
      line2:
        type: string
      city:
        type: string
      state:
        type: string
      postalCode:
        type: string
      primary:
        type: boolean
  DroneUpdateReq:
    type: object
    properties:
      lat:
        type: number
      lng:
        type: number
    required:
      - lat
      - lng
  NoFlyZone:
    type: object
    properties:
      id:
        type: string
      mission:
        type: string
      location:
        type: object
      description:
        type: string
      isActive:
        type: boolean
      isPermanent:
        type: boolean
      startTime:
        type: string
      endTime:
        type: string
      style:
        type: object
    required:
      - description
      - isActive
      - isPermanent
      - location
  GeoJSON:
    type: object
    properties:
      type:
        type: string
      coordinates:
        type: array
        items:
          type: number
    required:
      - type
      - coordinates
  PilotChecklistAnswer:
    type: object
    properties:
      question:
        type: string
      answer:
        type: string
        enum:
          - yes
          - no
          - note
      note:
        type: string
    required:
      - question
  PilotChecklist:
    type: object
    properties:
      answers:
        type: array
        items:
          $ref: "#/definitions/PilotChecklistAnswer"
      user:
        type: string
      createdAt:
        type: string
        format: date
      updatedAt:
        type: string
        format: date
  ErrorMsg:
    type: object
    properties:
      mission:
        type: string
      status:
        type: number
